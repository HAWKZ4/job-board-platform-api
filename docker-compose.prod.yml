services:
  postgres:
    image: postgres:16-alpine
    container_name: job-board-db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: job-board-api
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env.prod
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend-network
    volumes:
      - ./uploads:/usr/src/app/uploads

volumes:
  postgres_data:

networks:
  backend-network:
    driver: bridge